#include<iostream>
using namespace std;

int max2(int a, int b){
    if(a>=b) return a;
    else return b;
}
int max3(int a, int b, int c){
    if(a>=b && a>=c) return a;
    else return max2(b,c);
}
int solution(int dp[][100], int h, int w, int arr[][100], int a, int b)
{
    if(dp[a][b] > 0 ) return dp[a][b];
    else
    {
        if(b == 0 && a != h-1) {
            dp[a][b] = max2(arr[a][b] + solution(dp,h,w,arr,a+1,b), arr[a][b] + solution(dp,h,w,arr,a+1,b+1));
            return dp[a][b];
        }
        else if(b == w-1 && a != h-1){ dp[a][b] = max2(arr[a][b] + solution(dp,h,w,arr,a+1,b), arr[a][b] + solution(dp,h,w,arr,a+1,b-1));
            return dp[a][b];
        }
        else if(a == h-1) { dp[a][b] = arr[a][b]; return dp[a][b];}
        else{
            dp[a][b] = max3(arr[a][b] + solution(dp,h,w,arr,a+1,b), arr[a][b] + solution(dp,h,w,arr,a+1,b+1), arr[a][b] + solution(dp,h,w,arr,a+1,b-1));
            return dp[a][b];
        }
    }
}

int main()
{
    int t, arr[100][100];
    cin >> t;
    while(t--)
    {
        int dp[100][100] = {0}, h, w, max = 0;
        cin >> h >> w;
        for( int i = 0; i < h; i++)
            for(int j = 0; j < w; j++)
                cin>>arr[i][j];
        for(int i = 0; i < w; i++)
        {
            int temp = solution(dp,h,w,arr,0,i);
            if(max < temp) max = temp;
        }
        cout<<max<<endl;
    }
    return 0;
}
